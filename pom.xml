<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.farubaba</groupId>
  <artifactId>mobile-server</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>mobile-server</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
    <struts2.version>2.5.14.1</struts2.version>
	<log4j2.version>2.10.0</log4j2.version>
  </properties>

  <dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-bom</artifactId>
			<version>${struts2.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-bom</artifactId>
			<version>${log4j2.version}</version>
			<scope>import</scope>
			<type>pom</type>
		</dependency>
	</dependencies>
  </dependencyManagement>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <!-- Junit也是可以在compile中在代码里使用的，但通常我们都只在测试中使用，这里是为了方便直接在代码中使用断言才加入compile依赖 -->
      <scope>compile</scope>
    </dependency>
    <dependency>
	  <groupId>javax</groupId>
	  <artifactId>javaee-api</artifactId>
	  <version>7.0</version>
	  <scope>provided</scope>
	</dependency>
	<dependency>
	    <groupId>org.apache.struts</groupId>
	    <artifactId>struts2-core</artifactId>
	    <!-- <version>${struts2.version}</version> -->
	</dependency>
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-core</artifactId>
	     <!--<version>${log4j2.version}</version> -->
	</dependency>
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-api</artifactId>
	     <!-- <version>${log4j2.version}</version> -->
	</dependency>
	<!-- struts2零配置依赖 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-convention-plugin</artifactId>  
        <!--  <version>2.5.14.1</version> -->  
        <type>jar</type>  
        <scope>compile</scope>  
    </dependency>  
    <!-- struts2的json依赖 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-json-plugin</artifactId>  
        <!--  <version>2.3.4</version>  -->
        <type>jar</type>  
        <scope>compile</scope>  
    </dependency>   
	<dependency>
	  <groupId>com.google.code.gson</groupId>
	  <artifactId>gson</artifactId>
	  <version>2.8.5</version>
	</dependency>
	<!-- 添加jstl，在用到jsp里添加：<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%> -->
	<dependency>
	    <groupId>jstl</groupId>
	    <artifactId>jstl</artifactId>
	    <version>1.2</version>
	</dependency>
	
	<!-- 模拟客户端使用的依赖 -->
	<dependency>
  	<groupId>com.squareup.okhttp3</groupId>
  	<artifactId>okhttp</artifactId>
  	<version>3.11.0</version>
	</dependency>
	
	<dependency>
	 <groupId>com.google.guava</groupId>
	 <artifactId>guava</artifactId>
	 <version>26.0-jre</version>
	 <!-- or, for Android: -->
	 <!-- <version>26.0-android</version> -->
	</dependency>
  </dependencies>

  <build>
    <finalName>mobile-server</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-maven-plugin</artifactId>
		    <!-- <version>9.4.7.v20170914</version> -->
		    <version>9.4.11.v20180605</version>
		    <configuration>
		    	<jettyXml>jetty.xml,jetty-http.xml,jetty-ssl.xml,jetty-https.xml</jettyXml>
		        <webApp>
		            <contextPath>/${project.build.finalName}</contextPath>
		        </webApp>
		        <stopKey>CTRL+C</stopKey>
		        <stopPort>8999</stopPort>
		        <scanIntervalSeconds>10</scanIntervalSeconds>
		        <scanTargets>
		            <scanTarget>src/main/webapp/WEB-INF/web.xml</scanTarget>
		        </scanTargets>
		    </configuration>
		</plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
